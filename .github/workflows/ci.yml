name: "RoR CI"
on:
  workflow_dispatch:
    inputs:
      promote:
        description: 'Release to staging'
        required: true
        type: boolean

  push:
    branches: [ "main" ]
  pull_request:
    branches:
      - main
      - 'feature/**'

env:
  RAILS_ENV: test
  TEST_TAG: wave:test
  IMAGE_TAG: wave:latest

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: echo "Build"

  rspec:
    name: RSpec
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          context: .
          load: true
          target: build
          tags: ${{ env.TEST_TAG }}

      - name: Run tests
        run: docker compose -f compose.yml -f compose.ci.yml up --abort-on-container-exit
        #env:
        #  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

      #- name: Build and push
      #  uses: docker/build-push-action@v5
      #  with:
          #cache-from: type=local,src=/tmp/.buildx-cache
          #cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      #    push: false
      #    context: .
          #file: ./Dockerfile
      #    tags: ${{ env.IMAGE_TAG }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Staging
    needs: rspec

    if: ${{ inputs.promote }}
    steps:
      - name: Deploy
        run: echo "Deploy"
