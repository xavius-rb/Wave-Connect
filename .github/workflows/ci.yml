name: "RoR CI"
on:
  workflow_dispatch:
    inputs:
      promote:
        description: 'Release'
        required: true
        type: boolean

  push:
    branches: [ "main" ]
  pull_request:
    branches:
      - main
      - 'feature/**'

env:
  RAILS_ENV: test
  TEST_IMAGE_TAG: wave:test
  TEMP_IMAGE_NAME: image_

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          context: .
          target: build
          tags: ${{ env.TEST_IMAGE_TAG }}
          outputs: type=docker,dest=/tmp/${{ env.TEMP_IMAGE_NAME }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TEMP_IMAGE_NAME }}
          path: /tmp/${{ env.TEMP_IMAGE_NAME }}.tar

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  test:
    name: Test (RSpec)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.TEMP_IMAGE_NAME }}
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/${{ env.TEMP_IMAGE_NAME }}.tar
      - name: Run tests
        run: docker compose -f compose.yml -f compose.ci.yml up --abort-on-container-exit

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: ${{ github.ref_name == 'main' }}
        uses: docker/build-push-action@v5
        with:
          cache-from: type=registry,ref=xavius/wave-connect:latest
          cache-to: type=registry,ref=xavius/wave-connect:latest,mode=max
          push: true
          context: .
          target: deployment
          tags: xavius/wave-connect:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: test

    if: ${{ inputs.promote }}
    steps:
      - name: Deploy
        run: echo "Deploy"
